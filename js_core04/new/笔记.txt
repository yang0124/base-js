1、*****Array API：
   1、*****排序：一定要死记硬背！
	*手写冒泡排序：从第一个元素开始，依次比较相邻的两个元素，只要前一个元素>后				      一个元素，两者就交换位置，但是一套循环执行完毕只会将第一个最大		      	      的值放到最后，反复执行这个公式，意味两个循环嵌套
	鄙视：手写冒泡排序算法
	
	*Array的sort方法：arr.sort();
	问题：默认只能将所有的元素转为string，在按位PKunicode号
	解决：需要自定义一个比较器函数

	只要是希望按数字排序：
	什么是比较器函数：专门用于比较任意两个值大小的函数
        如何定义升序排列：
	  arr.sort(function(a,b){
		return a-b;//会悄悄地执行，而且里面还悄悄的做了循环
	  });
	1、必须有两个参数a,b在调用时，自动接受正在比较的两个元素值
	2、必须返回数字来表示两个值的大小
		如果a>b，就返回一个正数
		如果a<b，就返回一个负数
		如果a==b，就返回一个0
	   而sort就可以通过你返回的数字确定到底谁大，需不需要交换位置
	
	如何定义降序：
	  arr.sort(function(a,b){
		return b-a;//会悄悄地执行，而且里面还悄悄的做了循环
	  });

   2、栈和队列：其实都是数组，只不过是数组添加元素和删除元素的新方式
	栈：一端封闭，只能从另一端进出的数组
	    FILO
	何时使用：只要总是希望使用最新的数据时
	如何使用：
	  1、开头出入栈：
	     入栈：arr.unshift(新值);
	     出栈：var first=arr.shift();
	     缺点：每次出入栈，剩余元素的位置，都会发生变化

	  2、结尾出入栈
	     入栈：arr.push(新值);
	     出栈：arr.pop();

       *队列：只能从一端进入，从另一端出的 数组
	     FIFO
	何时使用：希望按照先来后到的顺序进行使用
	如何使用：
	     结尾入队列：arr.push(新值);
	     开头出列队：var first=arr.shift();

      *扩展：定时器如何开启：timer=setInterval(function(){//要执行的操作},间隔毫秒数)
	          如何停止：clearInterval(timer);timer=null;

-----------------------------------------------------------------------------------

2、二维数组：数组的元素，又引用了另一个数组
   何时使用：1、只要保存横行竖列的二维数据时
	     2、在一个数组内，再细分每个分类

   如何创建：
	1、创建同时初始化数组内容
	   var arr=[
		[1,2,3],
		[4,5,6],
		[7,8,9]
	   ];
   
	2、先创建空数组，在添加子数组
	   var arr=[];
	   arr[0]=[1,2,3];
	   arr[1]=[4,5,6];
	   arr[2]=[7,8,9];

	如何访问二维数组的元素
	  arr[r][c]
       *强调：列下标越界，返回undefined
	      行下标越界，报错！undefined没有资格使用[]
	遍历二维数组：外层循环控制行，内层循环控制列
		for(var r=0;r<arr.length;r++){
	   		for(var c=0;c<arr[r].length;c++){
	   			console.log(arr[r][c]);
	   		}
	   	}

3、*****String的概念：
   什么是字符串：多个字符组成的*只读*字符数组！（字符串所有的API都不会修改原字符串）
	和数组相同的地方
	1、字符串中字符个数：str.length;
	2、获取字符串中指定位置的字符：str[i];
	3、数组中只要不修改原数组的API，字符串也可以使用（concat、slice）用法一致

	差别：所有数组直接修改原数组的API，字符串都不能使用

***JS的引用类型11个（内置对象）：
	String Number Boolean -> 包装类型
	Array Date Math RegExp
	Error
	Function Object
	Global全局对象 -> 在浏览器中被window代替

***包装类型：专门封装原始类型的数据为对象，提供了属性和方法进行操作
     为什么：因为String.Number.Boolean经常会用于做一些操作
	     但是原始类型的数据不包含任何属性和方法，本身是不能使用.调用方法或属性
   何时使用：只要试图用原始类型的变量调用属性或者方法时，包装类型自动启用
   何时释放：方法调用完后，自动释放包装类型又变回了普通的数据

为什么undefined和null不能用.：因为他们俩没有对应的包装类型


作业：1、最low的轮播
      2、淡入淡出的轮播
-----------------------------------------------------------------------------------
      3、金夫人








