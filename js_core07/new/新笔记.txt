1、*****Function（作用域、声明提前、按值传递、*重载、回调函数、*闭包）
   ***函数的执行原理：
	0、程序加载时：
	   创建执行环境栈（ECS）：保存函数调用顺序的数组
	   首先压入全局执行环境（EC）
	   全局EC引用全局对象window
	   window中将要保存全局变量
	1、定义时
	   创建函数对象：封装函数的定义
	   在函数对象中定义scope属性，记录函数来自的作用域
	   全局函数的scope都是window
	2、调用前
	   在执行环境栈压入新的函数的EC
	   创建活动对象AO，保存本次函数调用用到的局部变量
	   在EC中添加scope chain属性引用AO
	   设置AO的parent属性为当前函数对象的scope引用的对象
	3、调用时：
	   变量的使用规则：优先使用局部变量，如果局部没有才找全局
	4、调用完：
	   函数的EC出栈，AO自动释放，局部变量也就自动释放了

	作用域链（scope chain）：
		以EC的 scope chain 为起点，经过AO逐级引用，形成的一条链式结构
		作用：查找变量

   作用域：2种
	1、全局作用域
	   全局变量：随处可用，可以反复使用
		    优：可以反复使用
		    缺：随处可用，容易被污染

	2、函数作用域
	   局部变量：只有函数调用时，内部才能使用
	             调用结束后，释放，一次性

		    优：仅内部使用，不会被污染
		    缺：一次性

*****闭包：保护一个可被反复使用的局部变量的一种词法结构
     如何实现：3步
	1、创建一个想要被保护的变量
	2、创建一个函数专门操作此变量
	3、创建一个函数将以上两者包裹起来，并且返回内层函数

     *鄙视时：
	1、判断闭包，找到受保护的变量，确定其值
	2、外层函数调用几次，就创建了几次闭包
	3、同一个外层函数调用，返回的内部函数，都是再使用同一个受保护的变量
     何时使用：只要有一天，你希望你的局部变量能够反复使用，必用闭包
	缺点：受保护的变量永远不能释放，造成内存泄露，所以闭包要尽量的少用

上午练习：1、画一个函数原理图
	  2、尝试使用一下闭包，谈恋爱。。。

***********************************************************************************
2、*****Object：三大特性（封装、继承、多态）
   什么是面向对象：程序中都使用对象来描述现实中的一个事物
   什么是对象：程序中描述现实中一个具体事务的程序结构（数据结构）
	 包含：属性和方法
   为什么要面向对象：现实中所有数据都必须包含在一个事物中才有意义。
			 -- 一般新手不适合面向对象

	之前用的11个浏览器内置对象/引用类型，都是对象！

   如何创建自定义对象
   	封装：将现实中一个事物的属性和功能集中定义在一个对象中
	      现实中一个事物的属性，会称为对象的属性
	      而现实中一个事物的功能，会称为对象的方法

   3种：
   1、*对象直接量：
	var obj={
		"属性名":属性值,
		...,
		"方法名":function(形参){函数体;return 结果}
	};
	强调：其实属性名和方法名的引号可以省略的，但是不推荐
	如何访问对象的属性和方法
		obj.属性名 -- 获得属性值
		    等效于：obj["属性名"];
		obj.方法名() -- 执行方法
		    等效于：obj["方法名"]();
		强调：如果用.，不能加""
		      如果用[]，就必须加""
		强烈建议：用.访问对象的属性和方法
	*****JS中一切都是对象，一切对象的底层都是hash数组
		特殊：1、访问到不存在的属性，返回undefined
		      2、随时随地添加不存在的属性

	this：在当前对象的方法内，引用着正在调用方法的对象
	何时使用：当前对象的方法内，要访问你当前对象自己的属性时，就必须写成this
	
	何时创建对象：今后都要先封装对象，再调用对象的属性和方法，做出我们想要的效果
			-- 建议

   2、使用new构造函数方式
	var obj=new Object();//空对象
	obj.属性名=属性值
	obj.方法名=function(){};

   3、使用自定义构造函数方式反复创建多个结构相同的对象
      使用直接量创建对象（第一种方式）的问题，仅适合创建一个单独的对象
		反复创建多个相同结果的对象，则代码冗余度太高
		不便于维护
      解决：先定义构造函数，再用构造函数反复创建对象
      如何定义：
	1、创建构造函数
	   function h51906(name,age,score,height){
		this.name=name;
		this.age=age;
		this.score=score;
		this.height=height;
	   }

	2、反复调用构造函数，创建多个对象
	   var hl=new h51906("何磊",20,200,170);

	遍历对象
	for(var i in obj){
		obj[i];//当前获得的值！
	}

扩展：
  面试/鄙视：简述一下 面向对象 和 面向过程？
	面向过程：过程：先后，其实就是一种开发方式，如果从一个人来说，一个人的一生就是		  一个面向过程
		  出生
		  成长
		  工作
		  结婚
		  死亡
		其实你们一直使用的都是面向过程，比如先做什么，再做什么，最后怎么样

        面向对象：JAVA/C#/PHP...都是面向对象基于类语言
		  Javascript：面向对象基于原型语言
		
		一个女生是一个对象
		所有的女生是一个类

		一个人是对象
		  属性
		    身高
		    体重
		    姓名
		  方法
		    吃饭
		    睡觉
		对象名.属性名;
		对象名.方法名();

作业：
  1、画函数原理图
  2、尝试闭包
  3、使用封装对象的形式！完成ObjectTemplate里面的李雷和韩梅梅
			完成选项卡效果