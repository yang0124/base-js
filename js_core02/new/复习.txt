1、数据类型转换
   转string：x.toString(); //不能转null和undefined
	     String(x);    //万能的，相当于隐式转换，一般情况我们不会手动调用此方法
			     +""

   转number：Number(x);    //万能的，相当于隐式转换，一般情况我们不会手动调用此方法
	专用于将字符串转为数字：parseInt/Float(str);
	从做往右依次读取每个字符，碰到不认识的就停止，会跳过开头结尾的空白字符，如果一来就转换不出来结果为NaN

   转boolean：Boolean(x);    //万能的，相当于隐式转换，一般情况我们不会手动调用此方法
			     //0,"",NaN,null,undefined,false

2、运算符与表达式
   1、算数运算：+ - * / %
      隐式转换：默认转为数字
	特殊：+，只要碰上字符串，就都转为字符串然后拼接

   2、关系运算：> < >= <= == != === !==
      隐式转换：默认转为数字
	特殊：1、两个都是字符串那么按位PKunicode号

	      2、NaN不大于不小于不等于任何值

	      3、null===undefined

   3、逻辑运算：&& || !
      隐式转换：两边的值都先转为布尔值，再综合比较
	&&：两边都为true，则为true
	    一边为false，则为false
	||：一边为true，则为true
	    两边都为false，则为false
	 !：颠倒布尔值

      短路逻辑：
	&&：一个条件一件事，满足就做，不满足就不做
	公式：条件&&(操作);

	||：实现两个值二选一使用

   4、位运算
      左移：m<<n ; m*2的n次方
      右移：m>>n ; m/2的n次方
  

   5、扩展赋值运算：+= -= *= /= %=
      i/=5;//i=i/5;

      i++; ++i;
      但是如果参与了其他表达式，那么
	前++返回的是新值
	后++返回的是旧值

   6、三目运算：
      条件?操作1:操作2;

      条件1?操作1:条件2?操作2:默认操作;

