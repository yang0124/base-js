1、***数据类型转换
   强制类型转换：程序员主动调用方法（函数）完成类型的转换
   何时强制：如果运算时，数据的类型不是我们想要的，就要先强制转换，再运算
   3种：
    转string：var str=x.toString(); //null和undefined不能使用，因为不能用.
	      var str=String(x); -- 万能
	      //相当于隐式转换，可以转换一切
	      //相当于+""

    转*number：
	1、任意类型 to number;
	   var num=Number(x);
	   //相当于隐式转换;
	   //如果x是纯数字组成的字符串 或者 可被隐式转为数字的，则返回一个number数值
	   //如果x不是纯数字组成字符串 或者 不可被隐式转为数字，则返回一个NaN
	   什么是NaN：Not a Number 无效的数字
	   typeof(NaN)：Number

	2、*string to number;//网页上所有获取来的内容都是字符串类型
	   var num = parseInt(str/num);
	   执行原理：从str的左边开始位置，依次读取每个字符
		     跳过开头结尾的空白字符
		     仅读取数字字符
		     碰到第一个非数字字符，就退出
		     不认识小数点

	   parseInt vs Number
		Number只能转纯数字的字符串，但是却可以转bool
		比如：Number("12px") -> NaN
		      Number(true) -> 1
		      Number("12.5") -> 12.5

	        parseInt(str)：可以去掉数字后的非数字字符
		      parseInt("12px") -> 12
		      parseInt(true) -> NaN
		      parseInt("12.5") -> 12

	        parseFloat(str)：用户和parseInt几乎相同，但是认识小数点
		      parseFloat("12.5px") -> 12.5
		      parseFloat("12.5.5") -> 12.5
		      parseFloat("12.0") -> 12.5

	总结：何时使用：
	  Number(x)：一般在隐式转换时，自动调用，不需要手动使用
	  parseInt/Float：只要是字符串转数字，就用parseXXX()
		Int：确定要的是一个整数的时候
		Float：没有明确规定的时候

    转boolean：
	Boolean(x); //相当于隐式转换
	***只有x是"",0,NaN,null,undefined,false，才转为false，其余都是true
	会在哪里碰到？
	  1、分支结构的条件其实自带布尔隐式转换
	  2、循环结构的条件其实自带布尔隐式转换

-----------------------------------------------------------------------------------

2、****运算符和表达式
   1、*算术运算：+ - * / %;
      隐式转换：默认都转为数字，再运算
	如果无法转为数字，则转为NaN
	如果NaN参与任何算术运算，结构仍为NaN
	特殊：+运算中，只要碰到字符串，就都转为字符串，+运算变成字符串拼接
      %：m%n：表示m/n，不取商，而取除不尽的余数部分
	何时使用：1、判断能否被整除
		  2、某个数字的后几位
		  3、控制一个运算的结果，不能超过指定值
		  4、判断奇偶性

   2、*关系运算，做比较
      包括：> < >= <= == != === !==
      只返回：true/false
      隐式转换：默认一切都转为数字，在比较大小
	特殊：1、如果参与比较的两值都是字符串
		 会按位PK每个字符的十六进制unicode号（十进制AscII码）
		 知道比出结果为止

	      2、NaN不大于、不小于、不等于任何值
		 永远都为false，没有办法通过普通的比较运算判断是不是NaN

		 判断是不是NaN：isNaN(x)
		*判断是不是一个数字：!isNaN(x);
		 	如果为true，就是数字
			如果为false，就是NaN
		 作用判断恶意输入

	      3、null 和 undefined：null == undefinbed -> true
		 如何解决：
		   全等：=== 数值相同并且数据类型相同
			其实就是不再带有隐式转换

//重写String()：证明全等和等于的区别
function String(x){
	if(x === null){
		return "null";
	}else if(x === undefined){
		return "undefined";
	}else{
		return x.toString();
	}
}
console.log(String(null));
console.log(String(100));
console.log(String(undefined));

上午的练习：
  1、尝试3种强制类型转换;
  2、尝试算数运算的隐式转换(普通、特殊);
  3、尝试比较运算的隐式转换(普通、特殊);

-----------------------------------------------------------------------------------
	
3、*逻辑运算：将多个关系元素综合比较得出最终结论
   包含：&&（与） ||（或） !（非）
   返回值：逻辑元作为条件使用，都返回true/false
   其中：&&：只有两个条件都为true，结果才为true
	     只要一个条件为false，结果就为false
	 ||：只要一个条件为true，结果就为true
	     只有两个条件都为false，结果才为false
   	  !：颠倒布尔值
   隐式转换：默认将每个条件都转为bool然后在综合比较
   特殊：
   ***短路逻辑：只要前一个条件已经可以得出最终结论，则后续条件不再执行！
	&&：如果前一个条件为true，则后一个操作才执行
	    如果前一个条件为false，则后一个操作不执行
	    固定套路：条件&&(操作);
	      一个条件，一件事儿，满足就做，不满足就不做
	      比如：如果money>=500,就打8折;
	        if(money>=500){money*=0.8;}
	        money>=500&&(money*=0.8);
	      使用短路的前提：你的操作只能有一句话，代码看上去更简洁
	
	||：如果前一个条件为true，则后一个条件不执行
	    如果前一个条件为false，则后一个条件执行
	固定套路：实现两个值二选一使用 -- 备选值（兼容IE）。

  4、位运算：
     左移和右移
     m<<n：读作m左移n位，相当于：m*2的n次方
     m>>n：读作m右移n位，相当于：m/2的n次方
     数字取整：m>>>0 || m^0

  5、*扩展赋值运算： 一句话执行两个操作：运算，再保存回去
     += -= *= /= %=
     何时使用：只要取出变量的值做计算，之后还要在保存回去时，就要用扩展赋值运算写法
     比如：total=total*0.8; => total*=0.8;
	   m+=n => m=m+n; 累加
	   m-=n => m=m-n; 累减
     递增，递减：++ --;
     i++ => i+=1 => i=i+1

     递增 vs 累加
	如果每次固定加1，就使用递增，否则，用累加

     ****递增/减：单独使用，放前放后都一样
	          参与其他表达式中时，变量中的值都会被+1
		  前++，返回递增后的*新*值
		  后++，返回递增前的*旧*值

     鄙视：var me=2;
	   var lp=me++ + ++me + me++;

   6、*三目运算：
      表达式1?表达式2:表达式3;

      表达式1：是条件，结果是一个bool值
      如果表达式1是true，则执行表达式2
      如果表达式1是false，则执行表达式3
      表达式2、3都是操作

      使用场合：代替简单的分支结构

      一个条件两件事，满足就做第一件，不满足就做第二件
      条件?操作1:操作2;		===   if(条件){
					操作1
				      }else{
					操作2
				      }
      注意：三目运算的默认操作不能省略，并且操作只能有一句话

      总结：
	if(){		简单的话		&&短路

	}

	if(){		简单的话		三目

	}else{

	}      

        if(){		简单的话		三目
					条件1?操作1:条件2?操作2:默认操作;
	}else if(){

	}else{

	}
-----------------------------------------------------------------------------------

作业：要求：1、今天的作业必须使用三目 或者 短路，不允许使用if...else...
	    2、所有的输出，都输出在页面的某个元素上
补充：1、如何解决舍入误差：num.toFixed(n);
      2、如何知道某个字的ascii码：var code=str.charCodeAt(0);

	1、PPT24页全部
	2、PPT29页2题
	3、PPT35页全部
	4、PPT37页全部
	5、PPT43页全部
	6、PPT49页全部