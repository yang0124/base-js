1、函数：
   两种创建方式：
	1、声明方式
	   function 函数名(形参列表){
		函数体;
		return 返回值;
	   }

	2、直接量方式
	   var 函数名=function(形参列表){
		函数体;
		return 返回值;
	   }

   调用：var 返回值=函数名(实参列表);

   ****作用域（scope）：
	 1、全局作用域
	    全局变量 或者 全局函数
	    在任何一个地方都可以使用

	 2、函数作用域
	    局部变量 或者 局部函数
	    只能在本次函数调用时，内部访问

	 变量的使用规则：优先使用局部变量
			 如果局部没有，找全局
			 如果全局没有，则报错

	 变量使用前都要先var再使用，如果没有创建过的变量直接赋值会导致全局污染

   ****声明提前
	 在程序执行前
	 会将var声明的变量和function声明的函数部分都提前到当前作用域的顶部
	 赋值留在原地

   ****按值传递
	 如果传递的是原始类型的值
	   修改新变量原变量不变，因为是复制了一个副本给对方
	 如果传递的是引用类型的对象
	   修改新变量原变量发生改变，因为两者用的是相同的地址值

2、预定义全局函数：
   编码和解码：
	编码：encodeURIComponent 代替 encodeURI
	解码：decodeURIComponent 代替 decodeURI

   判断一个数字是不是在有效范围
	isFinite();

   解析字符串：脱字符串的衣服
	eval(str);

3、分支结构
   1、if(){}		==		&&短路

   2、if(){}else		==		三目

   3、if(){}else if(){}else{}	==	三目

   4、switch(a+b){
	case 1:
	操作1;
	break;
	case 2:
	操作2;
	break;
	default:
	默认操作;
      }
      defalut也可以省略，但是如果条件都不满足，则什么都不会执行



















